[{"/Users/mihailcalitoiu/Desktop/dormadev/frontend/src/index.js":"1","/Users/mihailcalitoiu/Desktop/dormadev/frontend/src/App.js":"2","/Users/mihailcalitoiu/Desktop/dormadev/frontend/src/reportWebVitals.js":"3","/Users/mihailcalitoiu/Desktop/dormadev/frontend/src/note.js":"4"},{"size":535,"mtime":1675740385439,"results":"5","hashOfConfig":"6"},{"size":2236,"mtime":1675876883296,"results":"7","hashOfConfig":"6"},{"size":362,"mtime":1675740385439,"results":"8","hashOfConfig":"6"},{"size":1970,"mtime":1675876875350,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","suppressedMessages":"12","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"zuidn8",{"filePath":"13","messages":"14","suppressedMessages":"15","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16"},{"filePath":"17","messages":"18","suppressedMessages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23"},"/Users/mihailcalitoiu/Desktop/dormadev/frontend/src/index.js",[],[],"/Users/mihailcalitoiu/Desktop/dormadev/frontend/src/App.js",["24"],[],"import React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport axios from \"axios\";\nimport Note from \"./note\";\nimport Button from '@mui/material/Button';\n\n\n\nfunction App() {\n\n  const [notes, setNotes] = React.useState([])\n  const [newTitle, setNewTitle] = useState('')\n  const [numNotes, setNumNotes] = React.useState(0)\n  const [newDesc, setNewDescription] = useState('')\n\n  const addNote = () => {\n    setNumNotes(numNotes + 1)\n    if ((newDesc.length + setNewTitle) > 140) {\n      window.alert(\"Note must be less than 140 characters!\");\n      return null\n    }\n    axios.post(`/api/notes/`, {\n      title: newTitle, description: newDesc\n    }).then(res => {\n      axios.get(\"/api/notes/\").then((response) => {\n        setNotes(response.data.map((curnote) => {\n          return < Note data={curnote} met={updatelist} removed={false} />\n        }));\n\n      });\n    });\n\n    setNewDescription('')\n    setNewTitle('')\n  };\n\n  const updatelist = (inputid) => {\n    setNotes(null)\n    axios.get(\"/api/notes/\").then((response) => {\n      setNumNotes(response.data.length)\n      setNotes(response.data.map((curnote) => {\n        console.log(curnote)\n        return < Note data={curnote} met={updatelist} />\n      }));\n\n    });\n  };\n\n  useEffect(() => {\n    setNumNotes(0)\n    axios.get(\"/api/notes/\").then((response) => {\n      setNumNotes(response.data.length)\n      setNotes(response.data.map((curnote) => {\n        return < Note data={curnote} met={updatelist} removed={false} />\n      }));\n    });\n  }, []);\n\n\n  return (\n    // \"fake html JSX\"\n    <div>\n      <div className=\"top\">\n        <h1>{numNotes} Notes:</h1>\n        <p>Double click on a note's text to edit!</p>\n\n      </div>\n\n      <ul>{notes}</ul>\n      <div className=\"card\">\n        <h3>Add new note:</h3>\n        <form onSubmit={() => addNote()}>\n          <input type='title' onChange={event => setNewTitle(event.target.value)} placeholder=\"Title\" value={newTitle} />\n          <textarea type='text' onChange={event => setNewDescription(event.target.value)} placeholder=\"Lorem ipsum dolor etc\" value={newDesc} />\n        </form>\n        <Button variant=\"outlined\" onClick={() => addNote()}> Add </Button>\n\n      </div>\n\n    </div>\n  );\n}\nexport default App;","/Users/mihailcalitoiu/Desktop/dormadev/frontend/src/reportWebVitals.js",[],[],"/Users/mihailcalitoiu/Desktop/dormadev/frontend/src/note.js",["25","26","27","28"],[],"import React, { useEffect, useState } from \"react\";\n\nimport axios from \"axios\";\nimport Button from '@mui/material/Button';\n\nfunction Note(curpost) {\n  const [curID, setID] = React.useState(curpost.data.id);\n  const [isEditing, setIsEditing] = useState(false)\n  const [isRemoved, setisRemoved] = useState(false)\n  const [currenttitle, currentsetTitle] = React.useState(curpost.data.title);\n  const [currentDesc, currentSetDesc] = React.useState(curpost.data.description);\n\n\n  const editNote = (id) => {\n    if ((currentDesc.length + currentsetTitle) > 140) {\n      window.alert(\"Note must be less than 140 characters!\");\n      return null;\n    }\n    axios.put(`/api/notes/${id}`, {\n      title: currenttitle, description: currentDesc\n    }).then(res => {\n      setIsEditing(false);\n    });\n  };\n\n  // useEffect(() => {\n  //   setID(curpost.data.id);\n  //   currentsetTitle(curpost.data.title);\n  //   currentSetDesc(curpost.data.description);\n  // }, []);\n\n  const deleteNote = id => {\n\n    axios.delete(`/api/notes/${curID}`).then(res => {\n      curpost.met(curID);\n    });\n    // setisRemoved(true)\n\n  }\n  // if (isRemoved) { return null; }\n\n  return (\n    <div>\n      {\n\n        isEditing ?\n          <div className=\"card\">\n            <form onSubmit={() => editNote(curID)}>\n              <input type=\"title\" onChange={event => currentsetTitle(event.target.value)} value={currenttitle} />\n              <textarea onChange={event => currentSetDesc(event.target.value)} value={currentDesc} />\n            </form>\n            <Button variant=\"outlined\" onClick={() => editNote(curID)}> Save </Button>\n          </div>\n          :\n          <div className=\"card\">\n            <h2 onDoubleClick={() => setIsEditing(true)}>{currenttitle}</h2>\n            <p onDoubleClick={() => setIsEditing(true)}>{currentDesc}</p>\n            <Button variant=\"outlined\" onClick={() => deleteNote(curID)}> Delete </Button>\n          </div>\n\n      }\n    </div>);\n\n\n\n}\n\nexport default Note;",{"ruleId":"29","severity":1,"message":"30","line":57,"column":6,"nodeType":"31","endLine":57,"endColumn":8,"suggestions":"32"},{"ruleId":"33","severity":1,"message":"34","line":1,"column":17,"nodeType":"35","messageId":"36","endLine":1,"endColumn":26},{"ruleId":"33","severity":1,"message":"37","line":7,"column":17,"nodeType":"35","messageId":"36","endLine":7,"endColumn":22},{"ruleId":"33","severity":1,"message":"38","line":9,"column":10,"nodeType":"35","messageId":"36","endLine":9,"endColumn":19},{"ruleId":"33","severity":1,"message":"39","line":9,"column":21,"nodeType":"35","messageId":"36","endLine":9,"endColumn":33},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'updatelist'. Either include it or remove the dependency array.","ArrayExpression",["40"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'setID' is assigned a value but never used.","'isRemoved' is assigned a value but never used.","'setisRemoved' is assigned a value but never used.",{"desc":"41","fix":"42"},"Update the dependencies array to be: [updatelist]",{"range":"43","text":"44"},[1517,1519],"[updatelist]"]